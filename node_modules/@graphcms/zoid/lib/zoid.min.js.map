{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/belter/src/device.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://zoid/./node_modules/belter/src/constants.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/storage.js","webpack://zoid/./node_modules/belter/src/experiment.js","webpack://zoid/./node_modules/belter/src/global.js","webpack://zoid/./node_modules/belter/src/http.js","webpack://zoid/./node_modules/belter/src/types.js","webpack://zoid/./node_modules/belter/src/decorators.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/belter/src/test.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./src/constants.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/parent.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/child.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js","webpack://zoid/./src/index.js","webpack://zoid/./src/parent/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","isRegex","item","toString","PROTOCOL","MOCK","FILE","ABOUT","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","window","location","protocol","getParent","parent","err","getOpener","opener","canReadFromWindow","getActualDomain","Error","host","getDomain","domain","mockDomain","indexOf","isBlankDomain","href","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","result","push","getParents","getFrames","frames","len","length","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","linkFrameWindow","splice","cleanIframes","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","childFrame","isOpener","getAncestor","isAncestor","actualParent","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","getNthParentFromTop","getNthParent","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","stringifyDomainPattern","join","getDomainFromUrl","url","split","slice","onCloseWindow","callback","delay","maxtime","timeout","Infinity","check","clearTimeout","setTimeout","cancel","isWindow","obj","Window","__cross_domain_utils_window_check__","normalizeMockUrl","closeWindow","close","getFrameForWindow","frameElement","document","querySelectorAll","isDevice","isWebView","test","isStandAlone","standalone","matchMedia","matches","isFacebookWebView","ua","isFirefoxIOS","isEdgeIOS","isOperaMini","isAndroid","isIos","isGoogleSearchApp","isQQBrowser","isIosWebview","isAndroidWebview","isIE","documentMode","isIECompHeader","mHttp","querySelector","mContent","isElectron","process","versions","electron","isIEIntranet","status","isMacOsCna","supportsPopups","isChrome","isSafari","objectIDs","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","e","_construct","Parent","args","Class","isNativeReflectConstruct","a","apply","instance","Function","arguments","_wrapNativeSuper","_cache","Map","undefined","TypeError","has","set","Wrapper","constructor","writable","configurable","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","base64decode","atob","decodeURIComponent","map","charCodeAt","uniqueID","chars","charAt","Math","floor","random","toISOString","toLowerCase","getGlobal","global","__GLOBAL__","getObjectID","WeakMap","uid","serializeArgs","subkey","val","getEmptyObject","memoizeGlobalIndex","memoizeGlobalIndexValidFrom","memoize","method","options","simpleCache","thisCache","thisNamespace","cacheTime","time","memoizeIndex","memoizedFunction","cache","getOrSet","cacheKey","cacheResult","now","reset","promiseIdentity","ZalgoPromise","resolve","memoizePromise","memoizedPromiseFunction","try","finally","promisify","promisifiedFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","hashStr","hash","pow","sqrt","strHashStr","total","abs","regmatch","awaitKey","stringifyError","level","stack","newErr","stringifyErrorMessage","defaultMessage","domainMatches","hostname","index","patchMethod","handler","original","context","callOriginal","extend","source","assign","clear","values","memoizedValues","perc","pixels","percentage","round","min","max","roundUp","num","nearest","remainder","regexMap","regexp","results","svgToBase64","svg","objFilter","filter","identity","regexTokenize","text","token","promiseDebounce","promise","localPromise","then","reject","safeInterval","loop","isInteger","isFloat","serializePrimitive","deserializePrimitive","parseFloat","dotify","prefix","newobj","every","undotify","keyResult","parts","part","isLast","isIndex","eventEmitter","triggered","handlers","on","eventName","handlerList","cancelled","listener","trigger","promises","all","triggerOnce","camelToDasherize","string","g","dasherizeToCamel","toUpperCase","capitalizeFirstLetter","path","def","pathParts","safeTimeout","interval","defineLazyProp","arrayFrom","isObject","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","copyProp","target","descriptor","regex","start","RegExp","groups","end","regexAll","isDefined","cycle","debounce","weakMapMemoize","weakmap","arg","weakMapMemoizePromise","delete","cleanup","tasks","cleaned","register","task","shift","tryCatch","error","removeFromArray","arr","assertExists","thing","unique","keys","constHas","constant","dedupeErrors","seenErrors","seenStringifiedErrors","stringifiedError","ExtendableError","captureStackTrace","ReferenceError","KEY_CODES","ENTER","SPACE","ATTRIBUTES","UID","isDocumentReady","body","readyState","isDocumentInteractive","urlEncode","waitForWindowReady","addEventListener","waitForDocumentReady","setInterval","clearInterval","waitForDocumentBody","parseQuery","queryString","params","pair","getQueryParam","search","urlWillRedirectPage","formatQuery","extendQuery","originalQuery","props","extendUrl","originalUrl","originalHash","query","hashString","redirect","hasMetaViewPort","meta","screen","width","isElementVisible","el","offsetWidth","offsetHeight","getClientRects","getPerformance","performance","timing","connectEnd","navigationStart","enablePerformance","getPageRenderTime","domInteractive","htmlEncode","html","isBrowser","selector","onClick","element","event","keyCode","getScript","reverse","scripts","getElementsByTagName","script","src","isLocalStorageEnabled","localStorage","setItem","getItem","removeItem","getBrowserLocales","nav","locales","languages","language","userLanguage","locale","country","lang","appendChild","container","isElement","Element","nodeType","style","getElementSafe","id","getElement","elementReady","awaitFrameLoadPromises","PopupOpenError","popup","height","left","outerWidth","screenX","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","open","writeToWindow","write","err2","writeElementToWindow","tag","tagName","children","removeChild","setStyle","styleText","styleSheet","cssText","createTextNode","awaitFrameLoad","awaitFrameWindow","loadedFrame","createElement","class","className","setAttribute","attributes","innerHTML","iframe","allowTransparency","backgroundColor","border","hasAttribute","removeEventListener","bindEvents","eventNames","VENDOR_PREFIXES","setVendorCSS","capitalizedName","ANIMATION_START_EVENTS","ANIMATION_END_EVENTS","animate","clean","startTimeout","endTimeout","startEvent","endEvent","hasStarted","cleanUp","animationName","stopPropagation","makeElementVisible","setProperty","makeElementInvisible","showElement","hideElement","destroyElement","showAndAnimate","animation","animateAndHide","addClass","classList","add","removeClass","remove","isElementClosed","watchElementForClose","sacrificialFrame","sacrificialFrameWin","mutationObservers","disconnect","elementClosed","MutationObserver","mutationElement","parentElement","mutationObserver","observe","childList","display","frameWin","fixScripts","newScript","textContent","replaceChild","onResize","currentWidth","currentHeight","canceled","observer","newWidth","newHeight","ResizeObserver","subtree","characterData","getResourceLoadTime","getEntries","entries","entry","duration","isShadowElement","getShadowRoot","getShadowHost","shadowRoot","insertShadowSlot","shadowHost","slotName","slot","slotProvider","preventClickFocus","onFocus","preventDefault","blur","getStackTrace","currentScript","getCurrentScript","stackDetails","exec","scriptLocation","inferCurrentScript","currentUID","getCurrentScriptUID","getAttribute","getStorage","lifetime","accessedStorage","STORAGE_KEY","getState","storage","localStorageEnabled","rawStorage","parse","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","getBelterExperimentStorage","isEventUnique","loggedBeacons","experiment","group","sample","logTreatment","logCheckpoint","throttle","throttlePercentiles","getThrottlePercentile","treatment","started","forced","isEnabled","isDisabled","getTreatment","log","checkpoint","payload","logStart","logComplete","getGlobalNameSpace","version","globalKey","namespace","defValue","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","evt","setRequestHeader","ontimeout","send","addHeaderBuilder","TYPES","memoized","isPerc","isPx","toNum","toPx","toCSS","percOf","normalizeDimension","dim","wrapPromise","expected","timer","asyncReject","expect","avoid","expectError","wait","pop","isPromise","Promise","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","startActive","endActive","resolved","rejected","errorHandled","dispatching","isAsync","res","dispatch","j","dispatchPossiblyUnhandledError","chain","firstPromise","secondPromise","onSuccess","onError","catch","onFinally","toPromise","count","prom","awaitPromises","items","onPossiblyUnhandledException","flush","ZOID","POST_MESSAGE","DELEGATE","ALLOW_DELEGATE","PROP_TYPE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","INITIAL_PROPS","RAW","WINDOW_REFERENCES","OPENER","PARENT","GLOBAL","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","WILDCARD","DEFAULT_DIMENSIONS","WIDTH","HEIGHT","EVENT","RENDER","RENDERED","DISPLAY","ERROR","CLOSE","DESTROY","PROPS","RESIZE","FOCUS","__POST_ROBOT__","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","instanceID","getWindowInstanceID","awaitWindowHello","getHelloPromise","markWindowKnown","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","BRIDGE_NAME_PREFIX","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","winName","details","setupBridge","windowOpen","receiveMessage","last","bridgePromise","bridge","getWindowDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","tunnelWindow","cleanTunnelWindows","addTunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","windowTypePromise","getType","getName","focus","isClosed","setLocation","setName","sameDomain","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","domainBuffer","buffer","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","handleRequest","logName","sendResponse","ack","pathname","handleError","handleAck","handleResponse","receivedMessages","messages","parsedMessage","parseMessages","deserializeMessages","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","domainMatcher","responseTimeout","childTimeout","validateOptions","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","internalSerializeMessage","internalDeserializeMessage","setup","initialized","setupGlobalReceiveMessage","sourceElement","originalEvent","messageListener","initHello","destroy","responseListeners","cancelResponseListeners","cleanUpWindow","openBridge","bridges","bridgeFrames","openBridgeFrame","linkUrl","hasBridge","destroyBridges","_extends","destroyGlobal","getProxyObject","CrossDomainSafeWeakMap","freeze","testWeakMap","testKey","hasNativeWeakMap","_cleanupClosedWindows","isSafeToReadWrite","_inheritsLoose","subClass","superClass","prop","queryParam","getQueryValue","queryValue","parentComponent","overrides","parentWin","currentProxyWin","currentProxyContainer","childComponent","propsDef","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","initPromise","handledErrors","internalState","visible","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","show","hideOverride","hide","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getInternalStateOverride","getInternalState","setInternalStateOverride","setInternalState","getPropsForChild","sendToChild","newInternalState","windowProp","proxyWin","containerElement","setState","getUrl","getAttributes","getChildDomain","getDomainMatcher","windowName","attrs","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","getWindowRef","windows","initChild","childExports","resize","proxyFrame","unloadWindowListener","closeParentWindowListener","checkWindowClose","secondIsClosed","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","prerenderResizeListener","proxyContainer","innerContainer","containerWatcher","getHelpers","updateProps","setProps","newProps","isUpdate","helpers","inputProps","propNames","aliases","propDef","alias","default","decorate","propVal","required","extendProps","childProps","init","onRender","onDisplay","onRendered","onClose","onDestroy","onProps","render","childDomain","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildUrlPromise","serialization","dotkey","propsToQuery","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","buildWindowNamePromise","propRef","getPropsRef","propsRef","__ZOID__","parentDomain","checkClose","buildChildPayload","childPayload","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","loadUrlPromise","builtUrl","watchForClosePromise","watchForClose","onDisplayPromise","openBridgePromise","bridgeUrl","bridgeDomain","runTimeoutPromise","onRenderedPromise","normalizeChildProp","childDecorate","getParentDomain","parseChildWindowName","zoidcomp","encodedPayload","getChildPayload","defaultContainerTemplate","div","cspNonce","defaultPrerenderTemplate","spinner","defaultNoop","decorateOnce","getBuiltInProps","validate","cleanInstances","cleanZoid","component","allowDelegateListener","delegateListener","allowedParentDomains","defaultContext","eligible","logger","info","normalizeOptions","instances","isChild","registerChild","xprops","components","onPropHandlers","parentComponentWindow","ref","ancestor","getParentComponentWindow","normalizedProps","normalizeChildProps","checkParentDomain","elementRef","getProps","getPropsByRef","eligibility","reason","getDefaultContext","finalContext","getDefaultContainer","isEligible","clone","renderTo","driver","driverName","dep","canRenderTo","setupPostRobot","comp","destroyComponents","destroyPromise","destroyAll","destroyPostRobot","isServer","require"],"mappings":"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","file":"zoid.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        const parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    const domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows = [];\nconst iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : {| cancel : () => void |} {\n\n    let timeout;\n\n    const check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent; // eslint-disable-line compat/compat\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    const userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches); // eslint-disable-line compat/compat\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator && // eslint-disable-line compat/compat\n        window.navigator.userAgent && // eslint-disable-line compat/compat\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent) // eslint-disable-line compat/compat\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    const mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    const mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            const status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    const userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\nexport function isChrome(ua? : string = getUserAgent()) : boolean {\n    return (/Chrome|Chromium|CriOS/).test(ua);\n}\n\nexport function isSafari(ua? : string = getUserAgent()) : boolean {\n    return (/Safari/).test(ua) && !isChrome(ua);\n}\n","\n/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\nexport function getEmptyObject() : {||} {\n    // $FlowFixMe\n    return {};\n}\n\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport type Memoized<F> = F & {| reset : () => void |};\n\nlet memoizeGlobalIndex = 0;\nlet memoizeGlobalIndexValidFrom = 0;\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : Memoized<F> {\n    const { thisNamespace = false, time: cacheTime } = options;\n\n    let simpleCache;\n    let thisCache;\n\n    let memoizeIndex = memoizeGlobalIndex;\n    memoizeGlobalIndex += 1;\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        if (memoizeIndex < memoizeGlobalIndexValidFrom) {\n            simpleCache = null;\n            thisCache = null;\n            memoizeIndex = memoizeGlobalIndex;\n            memoizeGlobalIndex += 1;\n        }\n\n        let cache;\n\n        if (thisNamespace) {\n            thisCache = thisCache || new WeakMap();\n            cache = thisCache.getOrSet(this, getEmptyObject);\n        } else {\n            cache = simpleCache = simpleCache || {};\n        }\n\n        const cacheKey = serializeArgs(args);\n        let cacheResult = cache[cacheKey];\n\n        if (cacheResult && cacheTime && (Date.now() - cacheResult.time) < cacheTime) {\n            delete cache[cacheKey];\n            cacheResult = null;\n        }\n\n        if (cacheResult) {\n            return cacheResult.value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[cacheKey] = { time, value };\n\n        return value;\n    };\n\n    memoizedFunction.reset = () => {\n        simpleCache = null;\n        thisCache = null;\n    };\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    memoizeGlobalIndexValidFrom = memoizeGlobalIndex;\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : T {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\n// eslint-disable-next-line no-undef\ntype Values = <T>({ [string] : T }) => $ReadOnlyArray<T>;\n\nexport const values : Values = (obj) => {\n    if (Object.values) {\n        // $FlowFixMe\n        return Object.values(obj);\n    }\n\n    const result = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n};\n\nexport const memoizedValues : Values = memoize(values);\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function roundUp(num : number, nearest : number) : number {\n    const remainder = num % nearest;\n    return remainder\n        ? (num - remainder) + nearest\n        : num;\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n\nexport class ExtendableError extends Error {\n    constructor(message : string) {\n        super(message);\n        // eslint-disable-next-line unicorn/custom-error-definition\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n  \n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed, assertSameDomain,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom, ExtendableError } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\ntype WaitForDocumentReady = () => ZalgoPromise<void>;\n\nexport const waitForDocumentReady : WaitForDocumentReady = memoize(() => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : { [string] : string }, hash? : { [string] : string } |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n        \n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined') && window.location !== undefined;\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator; // eslint-disable-line compat/compat\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\n// eslint-disable-next-line unicorn/custom-error-definition\nexport class PopupOpenError extends ExtendableError {}\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i); // eslint-disable-line compat/compat\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode || !el.ownerDocument || !el.ownerDocument.documentElement || !el.ownerDocument.documentElement.contains(el)) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let cancelled = false;\n    const mutationObservers = [];\n    // eslint-disable-next-line prefer-const\n    let interval;\n    // eslint-disable-next-line prefer-const\n    let sacrificialFrame;\n    let sacrificialFrameWin;\n\n    const cancel = () => {\n        cancelled = true;\n        for (const observer of mutationObservers) {\n            observer.disconnect();\n        }\n        if (interval) {\n            interval.cancel();\n        }\n        if (sacrificialFrameWin) {\n            // eslint-disable-next-line no-use-before-define\n            sacrificialFrameWin.removeEventListener('unload', elementClosed);\n        }\n        if (sacrificialFrame) {\n            destroyElement(sacrificialFrame);\n        }\n    };\n\n    const elementClosed = () => {\n        if (!cancelled) {\n            handler();\n            cancel();\n        }\n    };\n\n    if (isElementClosed(element)) {\n        elementClosed();\n        return { cancel };\n    }\n\n    // Strategy 1: Mutation observer\n\n    if (window.MutationObserver) {\n        let mutationElement = element.parentElement;\n        while (mutationElement) {\n            const mutationObserver = new window.MutationObserver(() => {\n                if (isElementClosed(element)) {\n                    elementClosed();\n                }\n            });\n\n            mutationObserver.observe(mutationElement, { childList: true });\n            mutationObservers.push(mutationObserver);\n            mutationElement = mutationElement.parentElement;\n        }\n    }\n\n    // Strategy 2: Sacrificial iframe\n\n    sacrificialFrame = document.createElement('iframe');\n    sacrificialFrame.setAttribute('name', `__detect_close_${ uniqueID() }__`);\n    sacrificialFrame.style.display = 'none';\n    awaitFrameWindow(sacrificialFrame).then(frameWin => {\n        sacrificialFrameWin = assertSameDomain(frameWin);\n        sacrificialFrameWin.addEventListener('unload', elementClosed);\n    });\n    element.appendChild(sacrificialFrame);\n\n    // Strategy 3: Poller\n\n    const check = () => {\n        if (isElementClosed(element)) {\n            elementClosed();\n        }\n    };\n    interval = safeInterval(check, 1000);\n\n    return { cancel };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n    \n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    if (isShadowElement(shadowHost)) {\n        throw new Error(`Host element is also in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n    \n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\ntype GetCurrentScript = () => HTMLScriptElement;\n\nexport const getCurrentScript : GetCurrentScript = memoize(() => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\ntype GetCurrentScriptUID = () => string;\n\nexport const getCurrentScriptUID : GetCurrentScriptUID = memoize(() => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = script.getAttribute(`${ ATTRIBUTES.UID }-auto`);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = uniqueID();\n    script.setAttribute(`${ ATTRIBUTES.UID }-auto`, uid);\n\n    return uid;\n});\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {|\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n|};\n\nconst DEFAULT_SESSION_STORAGE = 20 * 60 * 1000;\n\nexport function getStorage({ name, lifetime = DEFAULT_SESSION_STORAGE } : {| name : string, lifetime? : number |}) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            const localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                const rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            const result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                const now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, lifetime } ]);\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\ntype Payload = {\n    [string] : ?(string | boolean)\n};\n\nexport type Experiment = {|\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : Payload) => Experiment,\n    logStart : (payload? : Payload) => Experiment,\n    logComplete : (payload? : Payload) => Experiment\n|};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {|\n    name : string,\n    sample? : number,\n    logTreatment? : ({| name : string, treatment : string, payload : Payload |}) => void,\n    logCheckpoint? : ({| name : string, treatment : string, checkpoint : string, payload : Payload |}) => void\n|};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    const throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample && !__TEST__) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    const treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : Payload = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ JSON.stringify(payload) }`)) {\n                logTreatment({ name, treatment, payload });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }_${ JSON.stringify(payload) }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : Payload = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : Payload = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : {| name : string, version? : string |}) : {| get : (string, defValue? : T) => T |} {\n\n    const global = getGlobal();\n    const globalKey = `__${ name }__${ version }_global__`;\n\n    const namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            const item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {|\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n|};\n\ntype ResponseType = {|\n    status : number,\n    headers : { [string] : string },\n    body : Object\n|};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nconst headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    const result = {};\n    for (const line of rawHeaders.trim().split('\\n')) {\n        const [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        const normalizedHeaders = {};\n\n        for (const key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (const headerBuilder of headerBuilders) {\n            const builtHeaders = headerBuilder();\n\n            for (const key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        const xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            const responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            const contentType = responseHeaders['content-type'];\n            const isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            const res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (const key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\ndeclare var __TEST__ : boolean;\n\nexport type JSONPrimitive = string | boolean | number;\nexport type JSONObject = { [string] : JSONPrimitive | JSONObject } | $ReadOnlyArray<JSONPrimitive | JSONObject>;\nexport type JSONType = JSONObject | JSONPrimitive;\n\nexport type CancelableType = {|\n    cancel : () => void\n|};\n","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { noop, tryCatch, removeFromArray } from './util';\n\ntype Prom<X> = Promise<X> | ZalgoPromise<X>; // eslint-disable-line no-restricted-globals, promise/no-native\n\ntype Handler = <T, A : $ReadOnlyArray<mixed>>(name : string, fn? : (...args : A) => T) => (...args : A) => T; // eslint-disable-line no-undef\ntype Wrapper<T> = ({| expect : Handler, avoid : Handler, expectError : Handler, error : Handler, wait : () => Prom<void> |}) => (Prom<T> | void);\n\nexport function wrapPromise<T>(method : Wrapper<T>, { timeout = 5000 } : {| timeout? : number |} = {}) : ZalgoPromise<void> {\n    const expected : Array<string> = [];\n    const promises : Array<ZalgoPromise<*>> = [];\n\n    const timer = setTimeout(() => {\n        if (expected.length) {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ expected[0] } to be called`)));\n        }\n    }, timeout);\n\n    const expect : Handler = (name, fn = noop) => {\n        expected.push(name);\n        \n        // $FlowFixMe\n        return function expectWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            const { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                promises.push(ZalgoPromise.asyncReject(error));\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result));\n            return result;\n        };\n    };\n\n    const avoid : Handler = (name : string, fn = noop) => {\n\n        // $FlowFixMe\n        return function avoidWrapper(...args) : * {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ name } to not be called`)));\n            // $FlowFixMe\n            return fn.call(this, ...args);\n        };\n    };\n\n    const expectError : Handler = (name, fn = noop) => {\n        expected.push(name);\n\n        // $FlowFixMe\n        return function expectErrorWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            const { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result).then(() => {\n                throw new Error(`Expected ${ name } to throw an error`);\n            }, noop));\n            return result;\n        };\n    };\n\n    const wait = () => {\n        return ZalgoPromise.try(() => {\n            if (promises.length) {\n                return promises.pop();\n            }\n        }).then(() => {\n            if (promises.length) {\n                return wait();\n            }\n            if (expected.length) {\n                return ZalgoPromise.delay(10).then(wait);\n            }\n        });\n    };\n\n    promises.push(ZalgoPromise.try(() => method({ expect, avoid, expectError, error: avoid, wait })));\n\n    return wait().then(() => {\n        clearTimeout(timer);\n    });\n}\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        const toString = ({}).toString;\n\n        if (toString) {\n            const name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : {| cancel : () => void |} {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    const promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    // eslint-disable-next-line flowtype/no-mutable-array\n    handlers : Array<{|\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    |}>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            const err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        const { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            const { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        const promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        const timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : $ReadOnlyArray<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        const promise = new ZalgoPromise();\n        let count = promises.length;\n        const results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            const prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        const result = {};\n        const awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                const value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n        \n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : $ReadOnlyArray<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<$ReadOnlyArray<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : {| cancel : () => void |} {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : $ReadOnlyArray<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet, getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__POST_ROBOT__.__SCRIPT_NAMESPACE__) {\n        return `${ __POST_ROBOT__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __POST_ROBOT__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (win !== window) {\n        return win[globalKey];\n    }\n    const global : Object = win[globalKey] = win[globalKey] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore, getGlobal } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : {| on : OnType |}) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<{| win : CrossDomainWindowType, domain : string, instanceID : string |}> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(err => {\n                // $FlowFixMe\n                if (__TEST__ && getGlobal(parent)) {\n                    throw err;\n                }\n            });\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{| domain : string |}> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void,\n    data : mixed\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code, data } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code, data });\n}\n\nexport function deserializeError({ message, stack, code, data } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n\n    if (data) {\n        // $FlowFixMe\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : {| win? : CrossDomainWindowType, domain? : string |}) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady : ZalgoPromise<HTMLBodyElement> = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n            if (source !== bridge) {\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            const getWindowDetails = () : WinDetails => {\n                const winDetails = popupWindowsByName.get(data.name);\n                // $FlowFixMe\n                return winDetails;\n            };\n\n            if (!getWindowDetails().domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            if (getWindowDetails().domain !== origin) {\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ getWindowDetails().domain || 'unknown' }`);\n            }\n\n            registerRemoteSendMessage(getWindowDetails().win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    if (!getWindowDetails()) {\n                        return;\n                    }\n\n                    const domain = getWindowDetails().domain;\n\n                    if (!domain) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: domain,\n                            source: getWindowDetails().win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        const details = popupWindowsByName.get(winName);\n        if (!details || isWindowClosed(details.win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        return { win, name, domain };\n    }\n\n    const details = popupWindowsByWin.getOrSet(win, () : WinDetails => {\n        if (!name) {\n            return { win };\n        }\n        \n        // $FlowFixMe\n        return popupWindowsByName.getOrSet(name, () : WinDetails => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : {| send : SendType |}) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            if (isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    if (frame && isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n        \n        if (!opener || !needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            return getGlobal(assertSameDomain(bridge)).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise, noop } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : {| send : SendType, id? : string |}) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    const windowTypePromise = winPromise.then(window => {\n        if (!isWindowClosed(window)) {\n            return getOpener(window) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        } else {\n            throw new Error(`Window is closed, can not determine type`);\n        }\n    });\n\n    windowNamePromise.catch(noop);\n    windowTypePromise.catch(noop);\n\n    return {\n        id,\n        getType: () => {\n            return windowTypePromise;\n        },\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName:       () => winPromise.then(win => {\n            if (isWindowClosed(win)) {\n                return;\n            }\n\n            if (isSameDomain(win)) {\n                return assertSameDomain(win).name;\n            }\n\n            return windowNamePromise;\n        }),\n        focus:   () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation: (href) => winPromise.then(win => {\n            const domain = `${ window.location.protocol }//${ window.location.host }`;\n\n            if (href.indexOf('/') === 0) {\n                href = `${ domain }${ href }`;\n            } else if (!href.match(/^https?:\\/\\//) && href.indexOf(domain) !== 0) {\n                throw new Error(`Expected url to be http or https url, or absolute path, got ${ JSON.stringify(href) }`);\n            }\n\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n        }),\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : {| win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType |}) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        \n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : {| send : SendType |}) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : {| source : CrossDomainWindowType, origin : string, data : Object |}) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {|\n    id : string,\n    name : string\n|}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : {| id : string, name : string |}, { send } : {| send : SendType |}) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    const args = Array.prototype.slice.call(arguments);\n\n                    if (opts.fireAndForget) {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n                    } else {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: false })\n                            .then(res => res.data.result);\n                    }\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : {| on : OnType, send : SendType |}) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { send } : {| on : OnType, send : SendType |}) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {|\n    then : SerializedFunction\n|}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : {| then : Function |}) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\ntype SendStrategies = {|\n    [$Values<typeof SEND_STRATEGY>] : (CrossDomainWindowType, string, string) => void\n|};\n\nexport const SEND_MESSAGE_STRATEGIES : SendStrategies = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n    if (domain.indexOf(PROTOCOL.FILE) === 0) {\n        domain = WILDCARD;\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n\n        if (domain.indexOf(PROTOCOL.MOCK) === 0) {\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send message to mock domain ${ domain }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            const windowDomain = getDomain(win);\n                \n            if (windowDomain !== domain) {\n                throw new Error(`Mock domain target ${ domain } does not match window domain ${ windowDomain }`);\n            }\n\n            // $FlowFixMe\n            domain = getActualDomain(win);\n\n        }\n    }\n\n    win.postMessage(serializedMessage, domain);\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport { windowStore, getGlobalKey } from '../../global';\nimport type { Message, PackedMessages } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction packMessages(messages : $ReadOnlyArray<Message>) : PackedMessages {\n    return {\n        [ getGlobalKey() ]: messages\n    };\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string, message : Message, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const messageBuffer = windowStore();\n\n        const domainBuffer = messageBuffer.getOrSet(win, () => ({}));\n\n        domainBuffer.buffer = domainBuffer.buffer || [];\n        domainBuffer.buffer.push(message);\n\n        domainBuffer.flush = domainBuffer.flush || ZalgoPromise.flush().then(() => {\n            if (isWindowClosed(win)) {\n                throw new Error('Window is closed');\n            }\n\n            const serializedMessage = serializeMessage(win, domain, packMessages(domainBuffer.buffer || []), { on, send });\n            delete domainBuffer.buffer;\n\n            const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n            const errors = [];\n\n            for (const strategyName of strategies) {\n                try {\n                    SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n                } catch (err) {\n                    errors.push(err);\n                }\n            }\n\n            if (errors.length === strategies.length) {\n                throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n            }\n        });\n\n        return domainBuffer.flush.then(() => {\n            delete domainBuffer.flush;\n        });\n    }).then(noop);\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({| source : CrossDomainWindowType, origin : string, data : mixed |}) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) |}) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher |}, listener : RequestListenerType) : {| cancel : () => void |} {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError, uniqueID } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, ResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport function handleRequest(source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n\n    const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (__DEBUG__) {\n        // eslint-disable-next-line no-console\n        console.info('receive::req', logName, origin, '\\n\\n', message.data);\n    }\n\n    function sendAck() : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.ACK,\n                    hash:   message.hash,\n                    name:   message.name\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send ack message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n\n    function sendResponse(ack : $Values<typeof MESSAGE_ACK>, data : ?Object, error : ?mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    console.info('respond::res', logName, origin, '\\n\\n', data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    console.error('respond::err', logName, origin, '\\n\\n', error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.RESPONSE,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ack,\n                    data,\n                    error\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n    \n    return ZalgoPromise.all([\n        sendAck(),\n\n        ZalgoPromise.try(() => {\n\n            if (!options) {\n                throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n            }\n\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n\n            const data = message.data;\n\n            return options.handler({ source, origin, data });\n\n        }).then(data => {\n            return sendResponse(MESSAGE_ACK.SUCCESS, data);\n\n        }, error => {\n            return sendResponse(MESSAGE_ACK.ERROR, null, error);\n        })\n\n    ]).then(noop).catch(err => {\n        if (options && options.handleError) {\n            return options.handleError(err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function handleAck(source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    try {\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n    \n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n    } catch (err) {\n        options.promise.reject(err);\n    }\n\n    options.ack = true;\n}\n\nexport function handleResponse(source : CrossDomainWindowType, origin : string, message : ResponseMessage) : void | ZalgoPromise<void> {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    if (!matchDomain(options.domain, origin)) {\n        throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n    }\n\n    if (source !== options.win) {\n        throw new Error(`Response source does not match registered window`);\n    }\n\n    deleteResponseListener(message.hash);\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (message.ack === MESSAGE_ACK.ERROR) {\n        if (__DEBUG__) {\n            console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n        }\n\n        options.promise.reject(message.error);\n\n    } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n        if (__DEBUG__) {\n            console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n        }\n\n        options.promise.resolve({ source, origin, data: message.data });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport type { Message } from '../types';\nimport { MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore, getGlobalKey } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { handleRequest, handleResponse, handleAck } from './types';\n\nfunction deserializeMessages(message : string, source : CrossDomainWindowType, origin : string, { on, send } : {| on : OnType, send : SendType |}) : ?$ReadOnlyArray<Message> {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    const parseMessages = parsedMessage[getGlobalKey()];\n\n    if (!Array.isArray(parseMessages)) {\n        return;\n    }\n\n    return parseMessages;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        if (isWindowClosed(source)) {\n            return;\n        }\n\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const messages = deserializeMessages(data, source, origin, { on, send });\n\n    if (!messages) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    for (const message of messages) {\n        if (receivedMessages.has(message.id)) {\n            return;\n        }\n\n        receivedMessages.set(message.id, true);\n\n        if (isWindowClosed(source) && !message.fireAndForget) {\n            return;\n        }\n\n        if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        try {\n            if (message.type === MESSAGE_TYPE.REQUEST) {\n                handleRequest(source, origin, message, { on, send });\n            } else if (message.type === MESSAGE_TYPE.RESPONSE) {\n                handleResponse(source, origin, message);\n            } else if (message.type === MESSAGE_TYPE.ACK) {\n                handleAck(source, origin, message);\n            }\n        } catch (err) {\n            setTimeout(() => {\n                throw err;\n            }, 0);\n        }\n    }\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : {| on : OnType, send : SendType |}) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : {| origin : string |}\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    ZalgoPromise.try(() => {\n        try {\n            noop(event.source);\n        } catch (err) {\n            return;\n        }\n\n        const source = event.source || event.sourceElement;\n        let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n        const data = event.data;\n\n        if (origin === 'null') {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        if (!source) {\n            return;\n        }\n\n        if (!origin) {\n            throw new Error(`Post message did not have origin domain`);\n        }\n\n        if (__TEST__) {\n            if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n                return;\n            }\n        }\n\n        receiveMessage({ source, origin, data }, { on, send });\n    });\n}\n\nexport function listenForMessages({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nconst getDefaultServerOptions = () : ServerOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\ntype CancelableZalgoPromise<T> = ZalgoPromise<T> & {|\n    cancel : () => void\n|};\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : CancelableZalgoPromise<{| source : mixed, origin : string, data : Object |}> {\n    \n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    // $FlowFixMe\n    promise.cancel = listener.cancel;\n\n    // $FlowFixMe\n    return promise;\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Can not send ${ name }. Expected domain ${ JSON.stringify(domain) } to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error(`Can not send ${ name }. Target window is closed`);\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof targetDomain === 'string') {\n            return targetDomain;\n        }\n\n        return ZalgoPromise.try(() => {\n            return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n        }).then(normalizedDomain => {\n            if (!matchDomain(targetDomain, targetDomain)) {\n                throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n            }\n\n            return normalizedDomain;\n        });\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    const domainMatcher = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domainMatcher);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domainMatcher, actualDomain, { send });\n    }).then(targetDomain => {\n        const domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        return sendMessage(win, domain, {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            type:   MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send }).then(() => {\n            return fireAndForget ? promise.resolve() : promise;\n        }, err => {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        });\n    });\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, createProxyWindow, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\n\n// $FlowFixMe\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT : number = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__ZOID__.__SCRIPT_NAMESPACE__) {\n        return `${ __ZOID__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __ZOID__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win? : CrossDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[globalKey]) {\n        win[globalKey] = {};\n    }\n\n    return win[globalKey];\n}\n\nexport function destroyGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    keys : Array<K>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        const weakmap = this.weakmap;\n        const keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            const value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const name = this.name;\n                const entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const values = this.values;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        const value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        const testWeakMap = new WeakMap();\n        const testKey = {};\n        const testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend } from 'belter/src';\n\nimport type { PropsInputType, PropsType, PropsDefinitionType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function extendProps<P>(propsDef : PropsDefinitionType<P>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    inputProps = inputProps || {};\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...Object.keys(propsDef) ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, event, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = propsDef[key];\n\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, event, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, event, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (__DEBUG__ && isDefined(value) && propDef.validate) {\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            props[key] = propDef.decorate({ value, props, state, close, focus, event, onError });\n        }\n    }\n\n    for (const key of Object.keys(propsDef)) {\n        const propDef = propsDef[key];\n        // $FlowFixMe\n        const propVal = props[key];\n        if (propDef.required !== false && !isDefined(propVal)) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\n// $FlowFixMe\nfunction getQueryParam<P>(prop : MixedPropDefinitionType<P>, key : string, value : string) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<P>(prop : MixedPropDefinitionType<P>, key : string, value : string) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : PropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    // $FlowFixMe\n    const keys = Object.keys(props);\n    \n    return ZalgoPromise.all(keys.map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                getQueryParam(prop, key, value),\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, base64encode, isRegex,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe, memoize,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { CssDimensionsType } from '../types';\nimport type { NormalizedComponentOptionsType, AttributesType } from '../component';\n\nimport { propsToQuery, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : CssDimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{| width? : ?number, height? : ?number |}], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype InternalState = {|\n    visible : boolean\n|};\n\ntype GetProxyContainer = (container : string | HTMLElement) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, {| context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> |}) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, {| windowName : string |}) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, {| context : $Values<typeof CONTEXT>, uid : string |}) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\ntype GetInternalState = () => ZalgoPromise<InternalState>;\ntype SetInternalState = (InternalState) => ZalgoPromise<InternalState>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload,\n    getInternalState : GetInternalState,\n    setInternalState : SetInternalState\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype ParentComponent<P> = {|\n    init : () => void,\n    render : (CrossDomainWindowType, string | HTMLElement, $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function parentComponent<P>(options : NormalizedComponentOptionsType<P>, overrides? : ParentDelegateOverrides<P> = getDefaultOverrides(), parentWin : CrossDomainWindowType = window) : ParentComponent<P> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    let internalState = {\n        visible: true\n    };\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n    const getInternalStateOverride : ?GetInternalState = overrides.getInternalState;\n    const setInternalStateOverride : ?SetInternalState = overrides.setInternalState;\n\n    const getPropsForChild = (domain : string | RegExp) : ZalgoPromise<PropsType<P>> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return ZalgoPromise.hash(result);\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getInternalState = () => {\n        return ZalgoPromise.try(() => {\n            if (getInternalStateOverride) {\n                return getInternalStateOverride();\n            }\n\n            return internalState;\n        });\n    };\n\n    const setInternalState = (newInternalState)  => {\n        return ZalgoPromise.try(() => {\n            if (setInternalStateOverride) {\n                return setInternalStateOverride(newInternalState);\n            }\n\n            internalState = { ...internalState, ...newInternalState };\n            return internalState;\n        });\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const getPropsRef = (proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, uid : string) : ZalgoPromise<PropRef> => {\n        return getPropsForChild(domain).then(childProps => {\n            const value = serializeMessage(proxyWin, domain, childProps);\n\n            const propRef = (childDomain === getDomain())\n                ? { type: INITIAL_PROPS.UID, uid }\n                : { type: INITIAL_PROPS.RAW, value };\n\n            if (propRef.type === INITIAL_PROPS.UID) {\n                const global = getGlobal(window);\n                global.props = global.props || {};\n                global.props[uid] = value;\n\n                clean.register(() => {\n                    delete global.props[uid];\n                });\n            }\n\n            return propRef;\n        });\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: true }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(showElement) : null\n        }).then(noop);\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: false }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(hideElement) : null\n        }).then(noop);\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const getAttributes = () : AttributesType => {\n        if (typeof attributes === 'function') {\n            return attributes({ props });\n        }\n\n        return attributes;\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return propsToQuery(propsDef, props).then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getChildDomain = () : string => {\n        if (domainMatch && typeof domainMatch === 'string') {\n            return domainMatch;\n        }\n\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : string | RegExp => {\n        if (domainMatch && isRegex(domainMatch)) {\n            return domainMatch;\n        }\n\n        return getChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : {| windowName : string |}) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n\n                // $FlowFixMe\n                const attrs = {\n                    name:  windowName,\n                    title: name,\n                    ...getAttributes().iframe\n                };\n\n                return getProxyObject(iframe({ attributes: attrs }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                // $FlowFixMe\n                const attrs = {\n                    name:  `__${ ZOID }_prerender_frame__${ name }_${ uniqueID() }__`,\n                    title: `prerender__${ name }`,\n                    ...getAttributes().iframe\n                };\n                return getProxyObject(iframe({\n                    attributes: attrs\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef => {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            childComponent = childExports;\n            initPromise.resolve();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : {| width? : ?number, height? : ?number |}) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err? : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all();\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = memoize(() : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n\n            if (closeOverride) {\n                // $FlowFixMe\n                const source = closeOverride.__source__;\n\n                if (isWindowClosed(source)) {\n                    return;\n                }\n\n                return closeOverride();\n            }\n\n            return ZalgoPromise.try(() => {\n                return event.trigger(EVENT.CLOSE);\n            }).then(() => {\n                return destroy(new Error(`Window closed`));\n            });\n        });\n    });\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width, height } = dimensions;\n    \n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                // $FlowFixMe\n                const attrs = {\n                    name: windowName,\n                    width,\n                    height,\n                    ...getAttributes().popup\n                };\n    \n                const win = popup('', attrs);\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin;\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (isClosed) {\n                return close();\n            } else if (!cancelled) {\n                return watchForClose(proxyWin);\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close();\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P> => {\n        const checkClose = () => checkWindowClose(win);\n        return { init: initChild, close, checkClose, resize, onError, show, hide };\n    };\n\n    const buildChildPayload = ({ proxyWin, childDomain, domain, target = window, context, uid } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |} = {}) : ZalgoPromise<ChildPayload> => {\n        return getPropsRef(proxyWin, childDomain, domain, uid).then(propsRef => {\n            return {\n                uid,\n                context,\n                tag,\n                version:      __ZOID__.__VERSION__,\n                childDomain,\n                parentDomain: getDomain(window),\n                parent:       getWindowRef(target, childDomain, uid, context),\n                props:        propsRef,\n                exports:      serializeMessage(proxyWin, domain, buildParentExports(proxyWin))\n            };\n        });\n    };\n\n    const buildWindowName = ({ proxyWin, childDomain, domain, target, uid, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<string> => {\n        return buildChildPayload({ proxyWin, childDomain, domain, target, context, uid }).then(childPayload => {\n            return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n        });\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : {| context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement |}) : ?HTMLElement => {\n        // $FlowFixMe\n        return renderer({\n            container, context, uid, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions, event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context, uid } : {| context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context, uid });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                const prerenderResizeListener = onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n\n                event.on(EVENT.RENDERED, prerenderResizeListener.cancel);\n            }\n        });\n    };\n\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } :\n        {| context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> |}) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, uid });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null,\n            internalState:  getInternalState()\n        }).then(({ container, frame, prerenderFrame, internalState: { visible } }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                const containerWatcher = watchElementForClose(innerContainer, close);\n                \n                clean.register(() => containerWatcher.cancel());\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const getBridgeUrl = () : ?string => {\n        if (typeof options.bridgeUrl === 'function') {\n            return options.bridgeUrl({ props });\n        }\n\n        return options.bridgeUrl;\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const setProps = (newProps : PropsInputType<P>, isUpdate? : boolean = false) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newProps });\n        }\n\n        const helpers = getHelpers();\n        extendProps(propsDef, props, newProps, helpers, isUpdate);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps, true);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            \n            if (!child || !proxyWin) {\n                return;\n            }\n\n            return getPropsForChild(getDomainMatcher()).then(childProps => {\n                return child.updateProps(childProps).catch(err => {\n                    return checkWindowClose(proxyWin).then(closed => {\n                        if (!closed) {\n                            throw err;\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            overrides: { props: delegateProps, event, close, onError, getInternalState, setInternalState }\n        }).then(({ data: { parent } }) => {\n            clean.register(() => {\n                if (!isWindowClosed(target)) {\n                    return parent.destroy();\n                }\n            });\n            return parent.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = (target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n            const domain = getDomainMatcher();\n            const childDomain = getChildDomain();\n            \n            checkAllowRender(target, domain, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildUrlPromise = buildUrl();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, childDomain, domain, target, context, uid });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, builtUrl: buildUrlPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, builtUrl }) => {\n                return proxyWin.setLocation(builtUrl);\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        setProps,\n        getHelpers,\n        getDelegateOverrides\n    };\n}\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T>(propsDef : PropsDefinitionType<P>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide } = helpers;\n        const decoratedValue = prop.childDecorate({ value, uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, onResize, elementReady, assertExists, noop } from 'belter/src';\n\nimport { getGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { NormalizedComponentOptionsType } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef } from '../parent';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P> = {|\n    uid : string,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n    const { type } = ref;\n\n    if (type === WINDOW_REFERENCES.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n    } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n        const { uid } = ref;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const global = getGlobal(frame);\n\n                if (global && global.windows && global.windows[uid]) {\n                    return global.windows[uid];\n                }\n            }\n        }\n    }\n\n    throw new Error(`Unable to find ${ type } parent component window`);\n}\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nfunction getPropsByRef<P>(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n    let props;\n\n    if (type === INITIAL_PROPS.RAW) {\n        props = value;\n    } else if (type === INITIAL_PROPS.UID) {\n        if (!isSameDomain(parentComponentWindow)) {\n            throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n        }\n\n        const global = getGlobal(parentComponentWindow);\n        props = assertExists('props', global && global.props[uid]);\n    }\n\n    if (!props) {\n        throw new Error(`Could not find props`);\n    }\n\n    return deserializeMessage(parentComponentWindow, domain, props);\n}\n\nexport type ChildComponent<P> = {|\n    getProps : () => PropsType<P>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P>(options : NormalizedComponentOptionsType<P>) : ChildComponent<P> {\n    const { propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n    const childPayload = getChildPayload();\n    let props : PropsType<P>;\n\n    if (!childPayload) {\n        throw new Error(`No child payload found`);\n    }\n\n    if (childPayload.version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { uid, parent: parentRef, parentDomain, exports, context, props: propsRef } = childPayload;\n    const parentComponentWindow = getParentComponentWindow(parentRef);\n    const parent = deserializeMessage(parentComponentWindow, parentDomain, exports);\n\n    const { show, hide, close } = parent;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (parent && parent.onError) {\n                return parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    };\n\n    const resize = ({ width, height } : {| width : ?number, height : ?number |}) : ZalgoPromise<void> => {\n        return parent.resize.fireAndForget({ width, height });\n    };\n\n    const getHelpers = () : ChildHelpers<P> => {\n        return {\n            show, hide, close, focus, onError, resize,\n            onProps, getParent, getParentDomain, uid\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : ZalgoPromise<{| width : boolean, height : boolean, element : ?HTMLElement |}> => {\n        const { width = false, height = false, element: elementRef = 'body' } = autoResize;\n        return elementReady(elementRef).catch(noop).then(element => {\n            return { width, height, element };\n        });\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return getAutoResize().then(({ width, height, element }) => {\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parent.init({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        }\n\n        setProps(getPropsByRef(parentComponentWindow, parentDomain, propsRef), parentDomain);\n        return props;\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent/parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type uidPropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({| width : ?number, height : ?number |}) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type PropsType<P> = {\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n    uid : uidPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        uid : string,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        onProps : ((PropsType<P>) => void) => void,\n        resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n        getParentDomain : () => string,\n        getParent : () => CrossDomainWindowType,\n        show : () => ZalgoPromise<void>,\n        hide : () => ZalgoPromise<void>\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    queryValue? : ({| value : T |}) => (ZalgoPromise<string> | string),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsInputType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\nexport type BuiltInPropsDefinitionType<P> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n    uid : StringPropDefinitionType<uidPropType, P>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P>,\n    hide : FunctionPropDefinitionType<hidePropType, P>,\n    show : FunctionPropDefinitionType<showPropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n|};\n\nexport type PropsDefinitionType<P> = {|\n    ...BuiltInPropsDefinitionType<P>,\n    [ string ] : MixedPropDefinitionType<P>\n|};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate:      ({ value }) => {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n\n                if (isWindow(value)) {\n                    // $FlowFixMe\n                    if (isWindowClosed(value)) {\n                        throw new Error(`Window is closed`);\n                    }\n\n                    // $FlowFixMe\n                    if (!isSameDomain(value)) {\n                        throw new Error(`Window is not same domain`);\n                    }\n                }\n            },\n            decorate: ({ value }) => {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        uid: {\n            type:          'string',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ uid }) => uid\n        },\n\n        cspNonce: {\n            type:     'string',\n            required: false\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize, identity } from 'belter/src';\n\nimport { getChildPayload, childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType, type PropsType } from './props';\n\ntype LoggerPayload = { [string] : ?string | ?boolean };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : {| width? : boolean, height? : boolean, element? : string |},\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {|\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    |},\n\n    eligible? : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({| props : PropsInputType<P> |}) => void,\n\n    logger? : Logger\n|};\n\nexport type AttributesType = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\ntype AutoResizeType = {|\n    width? : boolean,\n    height? : boolean,\n    element? : string\n|};\n\nexport type NormalizedComponentOptionsType<P> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain : ?(string | RegExp),\n    bridgeUrl : ?string,\n\n    propsDef : PropsDefinitionType<P>,\n    dimensions : CssDimensionsType,\n    autoResize : AutoResizeType,\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : AttributesType | ({| props : PropsType<P> |}) => AttributesType,\n\n    eligible : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({| props : PropsInputType<P> |}) => void,\n    logger : Logger\n|};\n\nexport type ZoidComponentInstance<P> = {|\n    ...ParentHelpers<P>,\n    isEligible : () => boolean,\n    clone : () => ZoidComponentInstance<P>,\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P> = {\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n};\n\nconst getDefaultAttributes = () : AttributesType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultAutoResize = () : AutoResizeType => {\n    // $FlowFixMe\n    return {};\n};\n\nfunction normalizeOptions<P>(options : ComponentOptionsType<P>) : NormalizedComponentOptionsType<P> {\n    let {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props: propsDef = {},\n        dimensions = {},\n        autoResize = getDefaultAutoResize(),\n        allowedParentDomains = WILDCARD,\n        attributes = getDefaultAttributes(),\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        eligible = () => ({ eligible: true }),\n        logger = { info: noop }\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n    const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = dimensions;\n\n    // $FlowFixMe\n    propsDef = { ...getBuiltInProps(), ...propsDef };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        propsDef,\n        dimensions: { width, height },\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger,\n        eligible\n    };\n}\n\nlet cleanInstances = cleanup();\nconst cleanZoid = cleanup();\n\nexport type Component<P> = {|\n    init : (PropsInputType<P>) => ZoidComponentInstance<P>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P>>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P>\n|};\n\nexport function component<P>(opts : ComponentOptionsType<P>) : Component<P> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef,\n        eligible\n    } = options;\n\n    const global = getGlobal();\n    const driverCache = {};\n    const instances = [];\n\n    const isChild = () : boolean => {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === tag && payload.childDomain === getDomain());\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        const allowDelegateListener = on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        const delegateListener = on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { overrides } }) => {\n            return {\n                parent: parentComponent(options, overrides, source)\n            };\n        });\n\n        cleanZoid.register(allowDelegateListener.cancel);\n        cleanZoid.register(delegateListener.cancel);\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n\n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n\n                return context;\n            }\n\n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (props : PropsInputType<P>) : ZoidComponentInstance<P> => {\n        // eslint-disable-next-line prefer-const\n        let instance;\n        props = props || getDefaultInputProps();\n\n        const { eligible: eligibility, reason } = eligible({ props });\n        const isEligible = () => eligibility;\n\n        const onDestroy = props.onDestroy;\n        props.onDestroy = (...args) => {\n            if (instance && eligibility) {\n                instances.splice(instances.indexOf(instance), 1);\n            }\n\n            if (onDestroy) {\n                return onDestroy(...args);\n            }\n        };\n\n        const parent = parentComponent(options);\n        parent.init();\n\n        if (eligibility) {\n            parent.setProps(props);\n        } else {\n            if (props.onDestroy) {\n                props.onDestroy();\n            }\n        }\n\n        cleanInstances.register(() => {\n            parent.destroy(new Error(`zoid destroyed all components`));\n        });\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!eligibility) {\n                    return parent.destroy().then(() => {\n                        throw new Error(reason || `${ name } component is not eligible`);\n                    });\n                }\n\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n\n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n                return parent.render(target, container, finalContext);\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        const clone = ({ decorate = identity } = {}) => {\n            return init(decorate(props));\n        };\n\n        instance = {\n            ...parent.getHelpers(),\n            isEligible,\n            clone,\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n\n        if (eligibility) {\n            instances.push(instance);\n        }\n\n        return instance;\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n\n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n\n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        instances,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D> = {|\n    register : (string, PropsDefinitionType<P>, (PropsInputType<P>) => ZoidComponentInstance<P>, L) => D\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n    init.instances = comp.instances;\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n\n    return init;\n}\n\nexport function destroyComponents() : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = cleanInstances.all();\n    cleanInstances = cleanup();\n    return destroyPromise;\n}\n\nfunction destroyZoid() : ZalgoPromise<void> {\n    return cleanZoid.all();\n}\n\nexport const destroyAll = destroyComponents;\n\nexport function destroy() {\n    destroyAll();\n    destroyGlobal();\n    destroyZoid();\n    destroyPostRobot();\n}\n","/* @flow */\n\nconst isServer = typeof window === 'undefined';\n\nlet { PopupOpenError } = isServer ? {} : require('belter/src');\n\nlet { ZoidComponent, ZoidComponentInstance } = isServer\n  ? {}\n  : require('./component');\n\nlet { RenderOptionsType } = isServer ? {} : require('./parent');\nlet { create, destroy, destroyComponents, destroyAll } = isServer\n  ? {}\n  : require('./component');\n\nlet { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT } = isServer\n  ? {}\n  : require('./constants');\n\nexport { PopupOpenError };\n\nexport type { ZoidComponent, ZoidComponentInstance };\nexport type { RenderOptionsType };\n\nexport { create, destroy, destroyComponents, destroyAll };\nexport { PROP_TYPE, PROP_SERIALIZATION, CONTEXT, EVENT };\n","/* @flow */\n\nexport * from './parent';\n"],"sourceRoot":""}